# GraphQL schema example
#
# https://gqlgen.com/getting-started/



# Supporting Types
type Tag {
  name: String!
  value: String!
}
type NewTag{
  name: String!
  value: String!
}

#  ARTICLE MANAGEMENT
type Article {
  id: ID!
  title: String!
  subtitle: String!
  content: String!
}

input NewArticle {
  id: String
  title: String!
  subtitle: String!
  content: String!
}

# BLOG MANAGEMENT
type Blog {
  id: ID!
  title: String!
  subtitle: String!
  content: String!
  summary: String!
  tags: [Tag]
}

input NewBlog {
  id: String
  title: String!
  subtitle: String!
  content: String!
  summary: String
}

# POST MANAGEMENT
type Post {
  id: ID!
  title: String
  content: String!
  tags: [String!]!
}

input NewPost {
  id: String
  title: String!
  content: String!
  tags: [String]
}

# ACCOUNT MANAGEMENT
enum SocialMediaProvider {
  LINKEDIN
  TWITTER
  FACEBOOK
  REDDIT
  STACKOVERFLOW
}

type SocialMediaAccount {
  id: ID!
  provider: SocialMediaProvider!
  providerID: String!
  providerUsername: String!
  providerToken: String!
} 

input NewAccount {
  id: String
  provider: String!
  providerID: String!
  providerUsername: String!
  providerToken: String!
}


# QUERIES______________________
type Query {
  # Article Queries
  article(id:ID!): Article
  articles: [Article!]!

  # Blog Queries
  blog(id:ID!): Blog
  blogs: [Blog!]!

  # Post Queries
  post(id:ID!): Post
  posts: [Post!]!

  # Account queries
  account(id:ID!): SocialMediaAccount
  accounts: [SocialMediaAccount!]!
  accountsByProvider(provider: String): [SocialMediaAccount!]!  
}

# MUTATIONS_____________________
type Mutation {
  # Article
  createArticle(input: NewArticle!): Article!
  
  # Blog
  createBlog(input: NewBlog!): Blog!

  # Post
  createPost(input: NewPost!): Post!

  # Account
  createAccount(input: NewAccount): SocialMediaAccount!
}
